{"version":3,"sources":["Cmpt/Header.tsx","Pages/Resume.tsx","Pages/Refs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","href","onClick","window","print","renderSkills","data","skills","map","skill","renderOpenSource","open_source","creator","name","link","contributor","ContractorExperience","jobs","duration","company","title","description","EmployeeExperience","renderExperience","experience","type","renderEducation","education","school","location","graduation","degree","major","minor","Resume","React","resumeData","setResumeData","isLoading","setIsLoading","errMsg","setErrMsg","getResumeData","a","fetch","resp","text","status","YAML","parse","addr","phone","email","site","website","Refs","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d36083d.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGithub, FaEnvelope, FaPhone, FaPrint } from 'react-icons/fa'\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"top-nav\">\r\n        <ul className=\"menu\">\r\n          <Link to=\"/\"><li className=\"logo\">Zane Hitchcox</li></Link>\r\n          <li className=\"space\" />\r\n          <a href=\"https://github.com/zwhitchcox\"><li>\r\n            <FaGithub />\r\n         </li></a>\r\n          <a href=\"mailto:zwhitchcox@gmail.com\"><li>\r\n            <FaEnvelope />\r\n         </li></a>\r\n          <a href=\"tel:+18652360804\"><li>\r\n            <FaPhone />\r\n         </li></a>\r\n          <a onClick={window.print}><li>\r\n            <FaPrint />\r\n         </li></a>\r\n          <a href=\"https://github.com/zwhitchcox?tab=repositories&q=ref-&type=&language=\"><li className=\"item\">Refs</li></a>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import * as React from 'react'\r\nimport YAML from 'yamljs'\r\nimport \"./Resume.scss\"\r\n\r\nconst renderContactInfo = data => {\r\n  return (\r\n    <>\r\n      <h1 className=\"name\">{data.name}</h1>\r\n      <h2 className=\"title\">{data.title}</h2>\r\n      <div className=\"contact-info\">\r\n        <div className=\"contact-line\">\r\n          <ul>\r\n            <li>{data.addr}</li>\r\n            <li className=\"hide-screen\">{data.phone}</li>\r\n            <li className=\"hide-screen\"><a href={`mailto:${data.email}`}>{data.email}</a></li>\r\n            <li className=\"hide-screen\"><a href={`https://${data.site}`}>{data.website}</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst renderSkills = data => (\r\n  <section>\r\n  <h3>Skills/Interests</h3>\r\n  <ul className=\"skills\">\r\n    {data.skills.map(skill => (\r\n      <li>{skill}</li>\r\n    ))}\r\n  </ul>\r\n  </section>\r\n)\r\n\r\nconst renderOpenSource = data => (\r\n  <section>\r\n    <h3>Open Source</h3>\r\n    <div className=\"lists\">\r\n      <div className=\"list\">\r\n        <p>Creator/Maintainer</p>\r\n        <ul>\r\n          {data.open_source.creator.map(({name, link}) => (\r\n            <a href={link}><li>{name}</li></a>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"list\">\r\n        <p>Contributor</p>\r\n        <ul>\r\n          {data.open_source.contributor.map(({name, link}) => (\r\n            <a href={link}><li>{name}</li></a>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </section>\r\n)\r\n\r\nconst ContractorExperience = ({jobs, duration}) => (\r\n  <div className=\"experience contractor-experience\">\r\n    <div className=\"general\">\r\n      <div><i>Contractor</i></div>\r\n      <div>({duration})</div>\r\n    </div>\r\n    <div className=\"description\">\r\n      <ul>\r\n        {jobs.map(({company, title, description}) => (\r\n          <li><p><i>{company}</i> - {title}</p>\r\n          <p>{description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst EmployeeExperience = ({company, title, duration, description}) => (\r\n  <div className=\"experience employee-experience\">\r\n    <div className=\"general\">\r\n      <div><i>{company}</i> - {title}</div>\r\n      <div>({duration})</div>\r\n    </div>\r\n    <div className=\"description\">\r\n      {description}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst renderExperience = data => (\r\n  <section>\r\n    <h3>Work Experience</h3>\r\n    {data.experience.map(experience => {\r\n      if (experience.type === \"employee\") {\r\n        return <>\r\n          <EmployeeExperience {...experience} />\r\n        </>\r\n      }\r\n      if (experience.type === \"contractor\") {\r\n        return <>\r\n          <ContractorExperience {...experience} />\r\n        </>\r\n      }\r\n    })}\r\n  </section>\r\n)\r\n\r\nconst renderEducation = ({education}) => (\r\n  <section>\r\n    <h3>Education</h3>\r\n    {education.map(({school, location, graduation, degree, major, minor}) => (\r\n      <div className=\"education\">\r\n        <div className=\"general\">\r\n          <div>\r\n            <i>{school}, {location}</i>\r\n          </div>\r\n          <div className=\"graduation\">({graduation})</div>\r\n        </div>\r\n        <div className=\"degree\">\r\n          <div>{degree}</div>\r\n          <div className=\"major\">Major: {major}, Collateral: {minor}</div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </section>\r\n)\r\n\r\n\r\n\r\nconst Resume = () => {\r\n  const [resumeData, setResumeData] = React.useState<any>({})\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n  const [errMsg, setErrMsg] = React.useState(\"\")\r\n\r\n\r\n  const getResumeData = async () => {\r\n    const resp = await fetch(\"/resume.yml\")\r\n    const text = await resp.text()\r\n    if (resp.status > 399) {\r\n      return setErrMsg(text)\r\n    }\r\n    setResumeData(YAML.parse(text))\r\n    setIsLoading(false)\r\n  }\r\n  React.useEffect(() => {\r\n    getResumeData()\r\n  }, [])\r\n\r\n  if (errMsg) {\r\n    return <div>\r\n      There was an error: {errMsg}\r\n    </div>\r\n  }\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  return (\r\n    <div className=\"resume\">\r\n      {renderContactInfo(resumeData)}\r\n      <div className=\"content\">\r\n        {renderSkills(resumeData)}\r\n        {renderOpenSource(resumeData)}\r\n        {renderExperience(resumeData)}\r\n        {renderEducation(resumeData)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Resume","import * as React from 'react'\r\nimport \"./Refs.scss\"\r\n\r\nconst Refs = () => {\r\n  return (\r\n    <div className=\"refs\">\r\n      <p>These are references I use so I can copy and paste into my own code when I need to without having to rewrite everything.</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Refs\r\n","import React from 'react';\nimport Header from './Cmpt/Header'\nimport Resume from './Pages/Resume'\nimport Refs from './Pages/Refs'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <main>\n          <Switch>\n            <Route path=\"/refs\">\n              <Refs />\n            </Route>\n            <Route path=\"/\">\n              <Resume />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}