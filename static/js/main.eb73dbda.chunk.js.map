{"version":3,"sources":["Cmpt/Header.tsx","Pages/Resume.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["menuItems","link","icon","text","Header","setDarkMode","darkMode","React","showMenu","setShowMenu","className","to","map","href","onClick","renderSkills","data","skills","skill","renderOpenSource","open_source","creator","name","contributor","ContractorExperience","jobs","duration","company","title","description","EmployeeExperience","renderExperience","experience","i","type","key","renderEducation","education","school","location","graduation","degree","major","minor","Resume","resumeData","setResumeData","isLoading","setIsLoading","errMsg","setErrMsg","getResumeData","a","fetch","resp","status","YAML","parse","addr","phone","email","site","website","App","useState","_setDarkMode","bool","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb73dbda.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGithub, FaEnvelope, FaPhone, FaPrint, FaBook, FaBars, FaMoon } from 'react-icons/fa'\r\n\r\nconst menuItems = [\r\n  {\r\n    link: \"mailto:zwhitchcox@gmail.com\",\r\n    icon: <FaEnvelope />,\r\n    text: \"zwhitchcox@gmail.com\",\r\n  },\r\n  {\r\n    link: \"tel:+18652360804\",\r\n    icon: <FaPhone />,\r\n    text: \"(865) 236-0804\",\r\n  },\r\n  {\r\n    link: \"https://github.com/zwhitchcox\",\r\n    icon: <FaGithub />,\r\n    text: \"Github\",\r\n  },\r\n  {\r\n    link: \"javascript:window.print()\",\r\n    icon: <FaPrint />,\r\n    text: \"Print\",\r\n  },\r\n  {\r\n    link: \"https://github.com/zwhitchcox?tab=repositories&q=ref-&type=&language=\",\r\n    icon: <FaBook />,\r\n    text: \"Refs\",\r\n  }\r\n]\r\n\r\n\r\nconst Header = ({setDarkMode, darkMode}) => {\r\n  const [showMenu, setShowMenu] = React.useState(false)\r\n  const toggleShowMenu = () => setShowMenu(!showMenu)\r\n\r\n  return (\r\n    <header>\r\n      <nav className={`top-nav ${darkMode ? \"top-nav-dark\" : \"\"}`}>\r\n        <Link to=\"/\"><div className=\"logo\">Zane Hitchcox</div></Link>\r\n        <div className={`nav-links ${showMenu ? \"\" : \"hide\"}`}>\r\n          {\r\n            menuItems.map(({link, icon, text}) => (\r\n              <a href={link} key={link}>\r\n                <div className=\"nav-item\">\r\n                  <div className=\"nav-icon\">\r\n                  {icon}\r\n                  </div>\r\n                  <div className=\"nav-text\">\r\n                    {text}\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            ))\r\n          }\r\n          <a onClick={() => setDarkMode(!darkMode)}>\r\n            <div className=\"nav-item\">\r\n              <div className=\"nav-icon\">\r\n              <FaMoon />\r\n              </div>\r\n              <div className=\"nav-text\">\r\n                Dark Mode\r\n              </div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div className=\"bars\" onClick={toggleShowMenu}>\r\n          <FaBars />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import * as React from 'react'\r\nimport YAML from 'yamljs'\r\n\r\nconst renderContactInfo = data => {\r\n  return (\r\n    <>\r\n      <h1 className=\"name\">{data.name}</h1>\r\n      <h2 className=\"title\">{data.title}</h2>\r\n      <div className=\"contact-info\">\r\n        <div className=\"contact-line\">\r\n          <ul>\r\n            <li>{data.addr}</li>\r\n            <li className=\"hide-screen\">{data.phone}</li>\r\n            <li className=\"hide-screen\"><a href={`mailto:${data.email}`}>{data.email}</a></li>\r\n            <li className=\"hide-screen\"><a href={`https://${data.site}`}>{data.website}</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst renderSkills = data => (\r\n  <section>\r\n  <h3>Skills/Interests</h3>\r\n  <ul className=\"skills\">\r\n    {data.skills.map(skill => (\r\n      <li key={skill}>{skill}</li>\r\n    ))}\r\n  </ul>\r\n  </section>\r\n)\r\n\r\nconst renderOpenSource = data => (\r\n  <section>\r\n    <h3>Open Source</h3>\r\n    <div className=\"lists\">\r\n      <div className=\"list\">\r\n        <p>Creator/Maintainer</p>\r\n        <ul>\r\n          {data.open_source.creator.map(({name, link}) => (\r\n            <a href={link} key={link}><li>{name}</li></a>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"list\">\r\n        <p>Contributor</p>\r\n        <ul>\r\n          {data.open_source.contributor.map(({name, link}) => (\r\n            <a key={link} href={link}><li>{name}</li></a>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </section>\r\n)\r\n\r\nconst ContractorExperience = ({jobs, duration}) => (\r\n  <div className=\"experience contractor-experience\">\r\n    <div className=\"general\">\r\n      <div><i>Contractor</i></div>\r\n      <div>({duration})</div>\r\n    </div>\r\n    <div className=\"description\">\r\n      <ul>\r\n        {jobs.map(({company, title, description}) => (\r\n          <li key={company}><p><i>{company}</i> - {title}</p>\r\n          <p>{description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst EmployeeExperience = ({company, title, duration, description}) => (\r\n  <div className=\"experience employee-experience\">\r\n    <div className=\"general\">\r\n      <div><i>{company}</i> - {title}</div>\r\n      <div>({duration})</div>\r\n    </div>\r\n    <div className=\"description\">\r\n      {description}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst renderExperience = data => (\r\n  <section>\r\n    <h3>Work Experience</h3>\r\n    {data.experience.map((experience, i) => {\r\n      if (experience.type === \"employee\") {\r\n        return <>\r\n          <EmployeeExperience {...experience} key={i} />\r\n        </>\r\n      }\r\n      if (experience.type === \"contractor\") {\r\n        return <>\r\n          <ContractorExperience {...experience} key={i}/>\r\n        </>\r\n      }\r\n    })}\r\n  </section>\r\n)\r\n\r\nconst renderEducation = ({education}) => (\r\n  <section>\r\n    <h3>Education</h3>\r\n    {education.map(({school, location, graduation, degree, major, minor}) => (\r\n      <div key={school} className=\"education\">\r\n        <div className=\"general\">\r\n          <div>\r\n            <i>{school}, {location}</i>\r\n          </div>\r\n          <div className=\"graduation\">({graduation})</div>\r\n        </div>\r\n        <div className=\"degree\">\r\n          <div>{degree}</div>\r\n          <div className=\"major\">Major: {major}, Collateral: {minor}</div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </section>\r\n)\r\n\r\n\r\n\r\nconst Resume = () => {\r\n  const [resumeData, setResumeData] = React.useState<any>({})\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n  const [errMsg, setErrMsg] = React.useState(\"\")\r\n\r\n\r\n  const getResumeData = async () => {\r\n    const resp = await fetch(\"/resume.yml\")\r\n    const text = await resp.text()\r\n    if (resp.status > 399) {\r\n      return setErrMsg(text)\r\n    }\r\n    setResumeData(YAML.parse(text))\r\n    setIsLoading(false)\r\n  }\r\n  React.useEffect(() => {\r\n    getResumeData()\r\n  }, [])\r\n\r\n  if (errMsg) {\r\n    return <div>\r\n      There was an error: {errMsg}\r\n    </div>\r\n  }\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  return (\r\n    <div className=\"resume\">\r\n      {renderContactInfo(resumeData)}\r\n      <div className=\"content\">\r\n        {renderSkills(resumeData)}\r\n        {renderOpenSource(resumeData)}\r\n        {renderExperience(resumeData)}\r\n        {renderEducation(resumeData)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Resume","import React, { useState } from 'react';\nimport Header from './Cmpt/Header'\nimport Resume from './Pages/Resume'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nfunction App() {\n  const [darkMode, _setDarkMode] = useState(true)\n  const setDarkMode = bool => {\n    if (bool) {\n      document.body.className=\"body-dark\"\n    } else {\n      document.body.className= \"\"\n    }\n    _setDarkMode(bool)\n  }\n  return (\n    <Router>\n      <div className={`App ${darkMode ? \"App-dark\" : \"\"}`}>\n        <Header {...({darkMode, setDarkMode})} />\n        <main>\n          <Switch>\n            <Route path=\"/\">\n              <Resume />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}